import streamlit as st
from PIL import Image
from data.neuroleader_types import NEUROLEADER_TYPES
from data.neuroleader_details import neuroleader_details
from utils.components import zen_header, content_section, quote_block, tip_block, notification, zen_button
from utils.material3_components import apply_material3_theme
from utils.layout import get_device_type, responsive_grid, responsive_container, toggle_device_view
import re

# Poprawka dla funkcji clean_html, aby by≈Ça bardziej skuteczna
def clean_html(text):
    """Usuwa wszystkie tagi HTML z tekstu i normalizuje bia≈Çe znaki"""
    # Najpierw usu≈Ñ wszystkie tagi HTML
    text_without_tags = re.sub(r'<.*?>', '', text)
    # Normalizuj bia≈Çe znaki (zamie≈Ñ wiele spacji, tabulacji, nowych linii na pojedyncze spacje)
    normalized_text = re.sub(r'\s+', ' ', text_without_tags)
    return normalized_text.strip()

def show_neuroleader_explorer():
    """
    Wy≈õwietla stronƒô umo≈ºliwiajƒÖcƒÖ eksploracjƒô wszystkich typ√≥w neurolider√≥w
    wraz z ich szczeg√≥≈Çowymi opisami.
    """
    # Zastosuj style Material 3
    apply_material3_theme()
    
    # Opcja wyboru urzƒÖdzenia w trybie deweloperskim
    if st.session_state.get('dev_mode', False):
        toggle_device_view()
    
    # Pobierz aktualny typ urzƒÖdzenia
    device_type = get_device_type()
    
    zen_header("Odkrywanie Typ√≥w Neurolider√≥w")
    
    # Wprowadzenie do typ√≥w neurolider√≥w
    st.markdown("""
    ## üîç Poznaj r√≥≈ºne style przyw√≥dztwa neurobiologicznego
    
    Ka≈ºdy neurolider ma unikalne podej≈õcie do przewodzenia zespo≈Çowi, uwarunkowane cechami osobowo≈õci,
    wzorcami aktywno≈õci m√≥zgu, emocjami i strategiami dzia≈Çania. Poni≈ºej znajdziesz szczeg√≥≈Çowe opisy wszystkich
    typ√≥w neurolider√≥w, kt√≥re pomogƒÖ Ci zrozumieƒá r√≥≈ºne style przyw√≥dztwa i ich neurobiologiczne podstawy.
    
    Wybierz interesujƒÖcy Ciƒô typ neuroliderera z listy i odkryj:
    - Charakterystykƒô g≈Ç√≥wnych cech
    - Profil emocjonalny
    - Zachowania i postawy
    - Neurobiologiczne podstawy
    - Kluczowe wyzwania
    - ≈öcie≈ºkƒô rozwoju przyw√≥dczego
    """)
    
    # Wyb√≥r typu neuroliderera
    selected_type = st.selectbox(
        "Wybierz typ neuroliderera do szczeg√≥≈Çowej analizy:",
        list(NEUROLEADER_TYPES.keys()),
        format_func=lambda x: f"{x} - {NEUROLEADER_TYPES[x]['description'][:50]}..."
    )
    
    if selected_type:
        # Tworzenie sekcji dla wybranego typu
        color = NEUROLEADER_TYPES[selected_type]["color"]
        content_section(
            f"{selected_type}", 
            NEUROLEADER_TYPES[selected_type]["description"],
            icon="üîç",
            border_color=color,
            collapsed=False
        )
        
        # Mocne strony i wyzwania w dw√≥ch kolumnach
        col1, col2 = st.columns(2)
        with col1:
            content_section("Mocne strony:", 
                            "\n".join([f"- ‚úÖ {strength}" for strength in NEUROLEADER_TYPES[selected_type]["strengths"]]), 
                            icon="üí™", 
                            collapsed=False)
        
        with col2:
            content_section("Wyzwania:", 
                           "\n".join([f"- ‚ö†Ô∏è {challenge}" for challenge in NEUROLEADER_TYPES[selected_type]["challenges"]]), 
                           icon="üöß", 
                           collapsed=False)
        
        # Rekomendowana strategia jako tip_block
        tip_block(clean_html(NEUROLEADER_TYPES[selected_type]["strategy"]), title="Rekomendowana strategia", icon="üéØ")
        
        # Szczeg√≥≈Çowy opis z neuroleader_details.py
        st.markdown("---")
        st.subheader("Szczeg√≥≈Çowa analiza typu")
        if selected_type in neuroleader_details:
            content_section(
                "Pe≈Çny opis",
                neuroleader_details[selected_type],
                icon="üìö",
                collapsed=True
            )
        else:
            notification("Szczeg√≥≈Çowy opis dla tego typu neuroliderera nie jest jeszcze dostƒôpny.", type="warning")
        
        # Por√≥wnanie z innymi typami
        st.markdown("---")
        st.subheader("Por√≥wnaj z innymi typami")
        
        # Pozw√≥l u≈ºytkownikowi wybraƒá drugi typ do por√≥wnania
        comparison_type = st.selectbox(
            "Wybierz typ neuroliderera do por√≥wnania:",
            [t for t in NEUROLEADER_TYPES.keys() if t != selected_type],
            format_func=lambda x: f"{x} - {NEUROLEADER_TYPES[x]['description'][:50]}..."
        )
        
        if comparison_type:
            # Tabela por√≥wnawcza
            col1, col2 = st.columns(2)
            
            # Przygotuj listy poza f-stringiem dla pierwszego typu
            strengths_list_1 = "\n".join([f"- ‚úÖ {strength}" for strength in NEUROLEADER_TYPES[selected_type]["strengths"]])
            challenges_list_1 = "\n".join([f"- ‚ö†Ô∏è {challenge}" for challenge in NEUROLEADER_TYPES[selected_type]["challenges"]])
            strategy_text_1 = clean_html(NEUROLEADER_TYPES[selected_type]["strategy"])
            
            # Dla pierwszego typu (wybranego)
            with col1:
                content_section(
                    selected_type,
                    f"""**Opis:** {NEUROLEADER_TYPES[selected_type]['description']}
        
**Mocne strony:**
{strengths_list_1}

**Wyzwania:**
{challenges_list_1}

**Strategia:**
{strategy_text_1}
                    """,
                    icon="üîç",
                    border_color=NEUROLEADER_TYPES[selected_type]["color"],
                    collapsed=False
                )
            
            # Przygotuj listy poza f-stringiem dla drugiego typu
            strengths_list_2 = "\n".join([f"- ‚úÖ {strength}" for strength in NEUROLEADER_TYPES[comparison_type]["strengths"]])
            challenges_list_2 = "\n".join([f"- ‚ö†Ô∏è {challenge}" for challenge in NEUROLEADER_TYPES[comparison_type]["challenges"]])
            strategy_text_2 = clean_html(NEUROLEADER_TYPES[comparison_type]["strategy"])
            
            # Dla drugiego typu (por√≥wnywanego)
            with col2:
                content_section(
                    comparison_type,
                    f"""**Opis:** {NEUROLEADER_TYPES[comparison_type]['description']}
        
**Mocne strony:**
{strengths_list_2}

**Wyzwania:**
{challenges_list_2}

**Strategia:**
{strategy_text_2}
                    """,
                    icon="üîç",
                    border_color=NEUROLEADER_TYPES[comparison_type]["color"],
                    collapsed=False
                )
      # Link powrotny do testu
    st.markdown("---")
    
    # Przyciski nawigacyjne w dw√≥ch kolumnach
    col1, col2 = st.columns(2)
    with col1:        
        if zen_button("üìã Przejd≈∫ do testu typu neuroliderera", key="go_to_test", use_container_width=True):
            st.session_state.page = 'neuroleader_test'
            st.rerun()
    
    # Przycisk do powrotu do dashboardu
    with col2:
        if zen_button("üè† Powr√≥t do dashboardu", key="back_to_dashboard", use_container_width=True):
            st.session_state.page = 'dashboard'
            st.rerun()
